version: "3"

services:
  api:
    env_file: .env
    build:
      context: .
      dockerfile: ./api/Dockerfile.api
    image: dobon_api
    container_name: dobon_api
    command: npm run dev-api
    volumes:
      - ./api:/usr/src/api
      - ./api/node_modules:/usr/src/api/node_modules
    ports:
      - "8080:8080"
    tty: true
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
  web:
    env_file: .env
    build:
      context: .
      dockerfile: ./frontend/Dockerfile.web
    image: dobon_web
    container_name: dobon_web
    command: npm run dev
    environment:
      NODE_ENV: development
    volumes:
      - ./frontend:/usr/src/frontend
      - ./frontend/node_modules:/usr/src/frontend/node_modules
    ports:
      - "3000:3000"
    tty: true
    depends_on:
      - db
  db:
    image: postgres:13-alpine
    container_name: dobon_db
    volumes:
      - ./database/initdb.d:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    ports:
      - "5432:5432"
    tty: true
  prisma:
    image: prismagraphql/prisma:1.34
    container_name: dobon_prisma
    restart: always
    ports:
      - "4466:4466"
    tty: true
    environment:
      PRISMA_CONFIG: |
        port: 4466
        databases:
          default:
            connector: postgres
            database: ${POSTGRES_DB}
            host: ${DB_HOST}
            port: ${DB_PORT}
            user: ${POSTGRES_USER}
            password: ${POSTGRES_PASSWORD}
            migrations: true
volumes:
  db: